{"version":3,"sources":["webpack://flarum-ext-acgembed-rr/webpack/bootstrap","webpack://flarum-ext-acgembed-rr/./admin.ts","webpack://flarum-ext-acgembed-rr/./src/admin/index.ts","webpack://flarum-ext-acgembed-rr/external \"flarum.core.compat['admin/app']\""],"names":["app","initializers","add","extensionData","registerSetting","setting","label","translator","trans","help","type"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA,wC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAmC;AAEnCA,uDAAG,CAACC,YAAY,CAACC,GAAG,CAAC,kBAAkB,EAAE,YAAM;EAC7CF,uDAAG,CAACG,aAAa,OACX,CAAC,kBAAkB,CAAC,CACvBC,eAAe,CACd;IACEC,OAAO,EAAE,uBAAuB;IAAE;IAClCC,KAAK,EAAEN,uDAAG,CAACO,UAAU,CAACC,KAAK,CAAC,4CAA4C,CAAC;IAAE;IAC3EC,IAAI,EAAET,uDAAG,CAACO,UAAU,CAACC,KAAK,CAAC,2CAA2C,CAAC;IAAE;IACzEE,IAAI,EAAE,UAAU,CAAE;EACpB,CAAC,EACD,EAAE,CAAC;EACL,CAAC,CACAN,eAAe,CACd;IACEC,OAAO,EAAE,uBAAuB;IAAE;IAClCC,KAAK,EAAEN,uDAAG,CAACO,UAAU,CAACC,KAAK,CAAC,4CAA4C,CAAC;IAAE;IAC3EC,IAAI,EAAET,uDAAG,CAACO,UAAU,CAACC,KAAK,CAAC,2CAA2C,CAAC;IAAE;IACzEE,IAAI,EAAE,SAAS,CAAE;EACnB,CAAC,EACD,EAAE,CAAC;EACL,CAAC,CAACN,eAAe,CACf;IACEC,OAAO,EAAE,2BAA2B;IAAE;IACtCC,KAAK,EAAEN,uDAAG,CAACO,UAAU,CAACC,KAAK,CAAC,gDAAgD,CAAC;IAAE;IAC/EC,IAAI,EAAET,uDAAG,CAACO,UAAU,CAACC,KAAK,CAAC,+CAA+C,CAAC;IAAE;IAC7EE,IAAI,EAAE,SAAS,CAAE;EACnB,CAAC,EACD,EAAE,CAAC;EACL,CAAC,CAACN,eAAe,CACf;IACEC,OAAO,EAAE,wBAAwB;IAAE;IACnCC,KAAK,EAAEN,uDAAG,CAACO,UAAU,CAACC,KAAK,CAAC,6CAA6C,CAAC;IAAE;IAC5EC,IAAI,EAAET,uDAAG,CAACO,UAAU,CAACC,KAAK,CAAC,4CAA4C,CAAC;IAAE;IAC1EE,IAAI,EAAE,SAAS,CAAE;EACnB,CAAC,EACD,EAAE,CAAC;EACL,CAAC;AACL,CAAC,CAAC,C;;;;;;;;;;;ACvCF,iD","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.ts\");\n","export * from './src/admin';\n","import app from 'flarum/admin/app';\n\napp.initializers.add('xypp/acgembed-rr', () => {\n  app.extensionData\n    .for('xypp-acgembed-rr')\n    .registerSetting(\n      {\n        setting: 'xypp.acgembed-rr.tags', // This is the key the settings will be saved under in the settings table in the database.\n        label: app.translator.trans('xypp-acgembed-rr.admin.settings.tags.label'), // The label to be shown letting the admin know what the setting does.\n        help: app.translator.trans('xypp-acgembed-rr.admin.settings.tags.desc'), // Optional help text where a longer explanation of the setting can go.\n        type: 'textarea', // What type of setting this is, valid options are: boolean, text (or any other <input> tag type), and select. \n      },\n      30 // Optional: Priority\n    )\n    .registerSetting(\n      {\n        setting: 'xypp.acgembed-rr.lazy', // This is the key the settings will be saved under in the settings table in the database.\n        label: app.translator.trans('xypp-acgembed-rr.admin.settings.lazy.label'), // The label to be shown letting the admin know what the setting does.\n        help: app.translator.trans('xypp-acgembed-rr.admin.settings.lazy.desc'), // Optional help text where a longer explanation of the setting can go.\n        type: 'boolean', // What type of setting this is, valid options are: boolean, text (or any other <input> tag type), and select. \n      },\n      30 // Optional: Priority\n    ).registerSetting(\n      {\n        setting: 'xypp.acgembed-rr.show-url', // This is the key the settings will be saved under in the settings table in the database.\n        label: app.translator.trans('xypp-acgembed-rr.admin.settings.show-url.label'), // The label to be shown letting the admin know what the setting does.\n        help: app.translator.trans('xypp-acgembed-rr.admin.settings.show-url.desc'), // Optional help text where a longer explanation of the setting can go.\n        type: 'boolean', // What type of setting this is, valid options are: boolean, text (or any other <input> tag type), and select. \n      },\n      30 // Optional: Priority\n    ).registerSetting(\n      {\n        setting: 'xypp.acgembed-rr.fetch', // This is the key the settings will be saved under in the settings table in the database.\n        label: app.translator.trans('xypp-acgembed-rr.admin.settings.fetch.label'), // The label to be shown letting the admin know what the setting does.\n        help: app.translator.trans('xypp-acgembed-rr.admin.settings.fetch.desc'), // Optional help text where a longer explanation of the setting can go.\n        type: 'boolean', // What type of setting this is, valid options are: boolean, text (or any other <input> tag type), and select. \n      },\n      30 // Optional: Priority\n    );\n});\n","module.exports = flarum.core.compat['admin/app'];"],"sourceRoot":""}